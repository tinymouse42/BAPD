Bally Astrocade Project Development (BAPD) Tool Specifications

Project Goal:

Create a Python-based application with a graphical user interface (GUI) to streamline the development, compilation, emulation, and debugging of Bally Astrocade projects.

Key Features:

  * Project Management:
  * Create, open, and manage Astrocade projects within a dedicated project directory.
  * Display the currently selected project in the main window.
  * Open the project folder directly from the application.
  * Integrated Development Environment (IDE):
  * (Planned) Code editor with syntax highlighting and auto-completion for Astrocade assembly.
  * (Planned) Integrated terminal for command-line interaction (Zmac, MAME).
  * Output window for displaying compilation results and MAME messages.
  * Compilation and Emulation:
  * Compile Astrocade assembly code using Zmac, with options for outputting a listing file.
  * Emulate compiled programs within MAME, with options for debugging.
  * Launch MAME with default settings.
  * Settings and Customization:
  * Configure paths to Zmac and MAME executables.
  * (Planned) Additional settings for editor preferences, emulator options, and themes.

Technical Specifications:
Language: Python 3.x
GUI Framework: PySide6 (Qt) using Designer.
External Tools: Zmac (compiler), MAME (emulator)
Configuration Format: TOML (settings.toml)

Directory Structure:

BAPD
├── bapd   (Source code)
│   ├── __main__.py
│   ├── settings.py
│   ├── ui
│   │   ├── main_window.py
│   │   ├── settings_dialog.py
│   ├── project.py   (Handles project management)
│   ├── compiler.py  (Wraps Zmac functionality)
│   ├── emulator.py  (Wraps MAME functionality)
│   └── ...
├── projects  (User's project directory)
├── config
│   └── settings.toml
├── documentation
└── ... (Other supporting files/folders)

Settings File (config/settings.toml):

Ini, TOML
[zmac]
path = "path/to/zmac"

[mame]
path = "path/to/mame"
Use code with caution.
content_copy
Current Implementation:

GUI:
Main window (BAPD_Main_GUI.py) for project selection, compilation, emulation, and output display.
Settings dialog (BAPD_Settings_GUI.py) for configuring Zmac and MAME paths.


Core Functionality:
main.py: Main application logic, button event handlers, and basic project management.
settings.py: (Stub) Settings management logic.

Planned Enhancements:
Implement the code editor and integrated terminal.
Add more robust settings management, including editor preferences and emulator options.
Incorporate error handling and user feedback mechanisms.
Explore options for syntax highlighting in the code editor and listing viewer.
Consider adding features like version control integration and visualizations.

Additional Notes:
The project is under active development.
The current implementation focuses on basic project management, compilation, and emulation.
Future updates will expand the feature set and improve the user experience.
